#!/user/bin/env python

import sys
import os

class Validator(object):
    VALID = 0
    ERR_FORMAT = -1
    ERR_ARGS = -2
    ERR_NONEXIST = -3
    ERR_OVERSIZE = -4    
    
    def __init__(self):
        self.output = None
        self.input = None
        self.err = False
        self.errstr = None 
    
    def validate(argv):
        if len(argv) < 3:
            self.err = self.ERR_ARGS
            self.errstr = 'number of arg < 3'
            return False 
        
        def ext_chk(x, y):
                z = x.split('.')   
                if z is None or len(z) < 2:
                    return False
                else:
                    return z[1] in y 
        inputf = sys.argv[1]    
        if not ext_chk(inputf, ['txt']):
            self.err = self.ERR_FORMAT
            self.errstr = 'Invalid input file %s'%inputf
            return False 
        outputf = sys.argv[2]
        if not ext_chk(outputf, ['txt']):
            self.err = self.ERR_FORMAT
            self.errstr = 'Invalid output file %s'%outputf
            return False         

        if not os.path.exists(inputf):
            self.err = self.ERR_NONEXIST
            self.errstr = 'Input file not exists %s'%inputf
            return False 
        if not os.path.exists(outputf):
            self.err = self.ERR_NONEXIST
            self.errstr = 'Output file not exists %s'%outputf
            return False 
        
        """
        at this point, at least we have valid file name
        """
        self.output = outputf
        self.input = inputf
        if os.path.getsize(inputf) >= 10000L:
            self.err = self.ERR_OVERSIZE
            self.errstr = 'Input file oversize %s'%inputf
            return False 
        return True
    
         
if __name__ == '__main__':
    vd = Validator()
    try:         
        if not vd.validate(sys.argv):
            if vd.output:
                with open(vd.outputf, 'w') as f:
                    f.write('Invalid Input\n')
        a = 1/0
    except Error as e:
        print 'Exception %s:%s'%(e.errno, e.strerror)
        if vd.output:
            with open(vd.outputf, 'w') as f:
                f.write('Invalid Input\n') 
        
    
    
      